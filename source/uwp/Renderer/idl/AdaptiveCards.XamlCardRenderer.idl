#include <sdkddkver.h>

import "inspectable.idl";
import "Windows.Foundation.idl";
import "Windows.UI.Xaml.idl";

namespace AdaptiveCards
{
    namespace XamlCardRenderer
    {
        runtimeclass XamlCardRenderer;

        runtimeclass AdaptiveTextBlock;
        runtimeclass AdaptiveCard;
        runtimeclass AdaptiveImage;
        runtimeclass AdaptiveImageSet;
        runtimeclass AdaptiveContainer;
        runtimeclass AdaptiveColumn;
        runtimeclass AdaptiveColumnSet;
        runtimeclass AdaptiveFact;
        runtimeclass AdaptiveFactSet;
        runtimeclass AdaptiveInputChoice;
        runtimeclass AdaptiveInputChoiceSet;
        runtimeclass AdaptiveInputDate;
        runtimeclass AdaptiveInputNumber;
        runtimeclass AdaptiveInputText;
        runtimeclass AdaptiveInputTime;
        runtimeclass AdaptiveInputToggle;

        runtimeclass AdaptiveBoundaryOptions;
        runtimeclass AdaptiveFontSizeOptions;
        runtimeclass AdaptiveColorOptions;
        runtimeclass AdaptiveColorOption;
        runtimeclass AdaptiveTextOptions;
        runtimeclass AdaptiveSeparationOptions;
        runtimeclass AdaptiveImageSizeOptions;
        runtimeclass AdaptiveTextBlockOptions;
        runtimeclass AdaptiveImageSetOptions;
        runtimeclass AdaptiveColumnOptions;
        runtimeclass AdaptiveContainerOptions;
        runtimeclass AdaptiveColumnSetOptions;
        runtimeclass AdaptiveImageOptions;
        runtimeclass AdaptiveCardOptions;
        runtimeclass AdaptiveFactSetOptions;
        runtimeclass AdaptiveShowCardOptions;
        runtimeclass AdaptiveActionOptions;
        runtimeclass AdaptiveDateInputOptions;
        runtimeclass AdaptiveTimeInputOptions;
        runtimeclass AdaptiveNumberInputOptions;
        runtimeclass AdaptiveToggleInputOptions;
        runtimeclass AdaptiveTextInputOptions;
        runtimeclass AdaptiveChoiceSetInputOptions;
        runtimeclass AdaptiveHostOptions;
        runtimeclass AdaptiveActionEventArgs;

        interface IAdaptiveCardElement;
        interface IAdaptiveActionElement;
        interface IAdaptiveTextBlock;
        interface IAdaptiveCard;
        interface IAdaptiveImage;
        interface IAdaptiveImageSet;
        interface IAdaptiveContainer;
        interface IAdaptiveColumn;
        interface IAdaptiveColumnSet;
        interface IAdaptiveFact;
        interface IAdaptiveFactSet;
        interface IAdaptiveInputChoice;
        interface IAdaptiveInputChoiceSet;
        interface IAdaptiveInputDate;
        interface IAdaptiveInputText;
        interface IAdaptiveInputNumber;
        interface IAdaptiveInputTime;
        interface IAdaptiveInputToggle;

        interface IAdaptiveBoundaryOptions;
        interface IAdaptiveFontSizeOptions;
        interface IAdaptiveColorOption;
        interface IAdaptiveColorOptions;
        interface IAdaptiveTextOptions;
        interface IAdaptiveSeparationOptions;
        interface IAdaptiveImageSizeOptions;
        interface IAdaptiveTextBlockOptions;
        interface IAdaptiveImageSetOptions;
        interface IAdaptiveColumnOptions;
        interface IAdaptiveContainerOptions;
        interface IAdaptiveColumnSetOptions;
        interface IAdaptiveImageOptions;
        interface IAdaptiveCardOptions;
        interface IAdaptiveFactSetOptions;
        interface IAdaptiveShowCardOptions;
        interface IAdaptiveActionOptions;
        interface IAdaptiveDateInputOptions;
        interface IAdaptiveTimeInputOptions;
        interface IAdaptiveNumberInputOptions;
        interface IAdaptiveToggleInputOptions;
        interface IAdaptiveTextInputOptions;
        interface IAdaptiveChoiceSetInputOptions;
        interface IAdaptiveHostOptions;
        interface IAdaptiveActionEventArgs;

        [version(NTDDI_WIN10_RS1)]
        typedef [v1_enum] enum TextSize
        {
            Small = 0,
            Normal,
            Medium,
            Large,
            ExtraLarge
        } TextSize;

        [version(NTDDI_WIN10_RS1)]
        typedef [v1_enum] enum TextWeight
        {
            Lighter = 0,
            Normal,
            Bolder
        } TextWeight;

        [version(NTDDI_WIN10_RS1)]
        typedef [v1_enum] enum TextColor
        {
            Default = 0,
            Dark,
            Light,
            Accent,
            Good,
            Warning,
            Attention
        } TextColor;

        [version(NTDDI_WIN10_RS1)]
        typedef [v1_enum] enum HAlignment
        {
            Left = 0,
            Center,
            Right
        } HAlignment;

        [version(NTDDI_WIN10_RS1)]
        typedef [v1_enum] enum ElementType
        {
            Unsupported = 0,
            AdaptiveCard,
            TextBlock,
            Image,
            Container,
            Column,
            ColumnSet,
            FactSet,
            Fact,
            ImageSet,
            ActionGroup,
            InputChoice,
            InputChoiceSet,
            InputDate,
            InputNumber,
            InputText,
            InputTime,
            InputToggle,
        } ElementType;

        [version(NTDDI_WIN10_RS1)]
        typedef [v1_enum] enum ActionType
        {
            Unsupported = 0, 
            ShowCard,
            Submit,
            Http,
            OpenUrl
        } ActionType;

        [version(NTDDI_WIN10_RS1)]
        typedef [v1_enum] enum ImageStyle {
            Normal = 0,
            Person
        } ImageStyle;

        [version(NTDDI_WIN10_RS1)]
        typedef [v1_enum] enum ImageSize {
            Default = 0,
            Auto,
            Stretch,
            Small,
            Medium,
            Large
        } ImageSize;

        [version(NTDDI_WIN10_RS1)]
        typedef [v1_enum] enum SeparationStyle {
            Default = 0,
            None,
            Strong,
        } SeparationStyle;

        [version(NTDDI_WIN10_RS1)]
        typedef [v1_enum] enum ActionsOrientation {
            Vertical = 0,
            Horizontal
        } ActionsOrientation;

        [version(NTDDI_WIN10_RS1)]
        typedef [v1_enum] enum ActionAlignment {
            Left = 0,
            Center,
            Right,
            Stretch,
        } ActionAlignment;

        [version(NTDDI_WIN10_RS1)]
        typedef [v1_enum] enum ActionMode {
            InlineEdgeToEdge = 0,
            Inline,
            Popup
        } ActionMode;

        [version(NTDDI_WIN10_RS1)]
        typedef [v1_enum] enum ChoiceSetStyle {
            Compact = 0,
            Expanded
        } ChoiceSetStyle;

        [version(NTDDI_WIN10_RS1)]
        typedef [v1_enum] enum TextInputStyle {
            Text = 0,
            Tel,
            Url,
            Email,
        } TextInputStyle;

        declare
        {
            interface Windows.Foundation.Collections.IVector<IAdaptiveCardElement*>;
            interface Windows.Foundation.Collections.IVector<IAdaptiveActionElement*>;
            interface Windows.Foundation.Collections.IVector<IAdaptiveColumn*>;
            interface Windows.Foundation.Collections.IVector<IAdaptiveFact*>;
            interface Windows.Foundation.Collections.IVector<IAdaptiveInputChoice*>;
            interface Windows.Foundation.Collections.IObservableVector<IAdaptiveCardElement*>;
            interface Windows.Foundation.Collections.IObservableVector<IAdaptiveColumn*>;
            interface Windows.Foundation.Collections.IObservableVector<IAdaptiveColumn*>;
            interface Windows.Foundation.IAsyncOperation<Windows.UI.Xaml.UIElement*>;
            interface Windows.Foundation.IReference<Windows.UI.Text.FontWeight>;
        }

        [
            uuid(74D69C2F-7F1C-47FD-A319-F4B4E7F72EE9),
            version(NTDDI_WIN10_RS1),
        ]
        interface IAdaptiveCardElement : IInspectable
        {
            [propget] HRESULT ElementType([out, retval] ElementType* value);

            [propget] HRESULT Speak([out, retval] HSTRING* value);
            [propput] HRESULT Speak([in] HSTRING value);

            [propget] HRESULT Separation([out, retval] SeparationStyle* value);
            [propput] HRESULT Separation([in] SeparationStyle value);
        };

        [
            uuid(f3b844da-2d6a-4003-8a57-4e5541fcd078),
            version(NTDDI_WIN10_RS1),
            exclusiveto(AdaptiveTextBlock)
        ]
        interface IAdaptiveTextBlock : IInspectable
        {
            [propget] HRESULT Size([out, retval] TextSize* value);
            [propput] HRESULT Size([in] TextSize value);

            [propget] HRESULT Weight([out, retval] TextWeight* value);
            [propput] HRESULT Weight([in] TextWeight value);

            [propget] HRESULT Color([out, retval] TextColor* value);
            [propput] HRESULT Color([in] TextColor value);

            [propget] HRESULT Text([out, retval] HSTRING* value);
            [propput] HRESULT Text([in] HSTRING value);

            [propget] HRESULT IsSubtle([out, retval] boolean* value);
            [propput] HRESULT IsSubtle([in] boolean value);

            [propget] HRESULT Wrap([out, retval] boolean* value);
            [propput] HRESULT Wrap([in] boolean value);

            [propget] HRESULT HorizontalAlignment([out, retval] HAlignment* value);
            [propput] HRESULT HorizontalAlignment([in] HAlignment value);

            [propget] HRESULT MaxLines([out, retval] UINT32 *value);
            [propput] HRESULT MaxLines([in] UINT32 value);
        };

        [
            version(NTDDI_WIN10_RS1),
            activatable(NTDDI_WIN10_RS1)
        ]
        runtimeclass AdaptiveTextBlock
        {
            [default] interface IAdaptiveTextBlock;
            interface IAdaptiveCardElement;
        };

        [
            uuid(9F68A612-9DCB-4710-8121-A116BD33B69B),
            version(NTDDI_WIN10_RS1),
            exclusiveto(AdaptiveCard),
        ]
        interface IAdaptiveCard : IInspectable
        {
            [propget] HRESULT Body([out, retval] Windows.Foundation.Collections.IVector<IAdaptiveCardElement*>** value);

            [propget] HRESULT Actions([out, retval] Windows.Foundation.Collections.IVector<IAdaptiveActionElement*>** value);

            [propget] HRESULT ElementType([out, retval] ElementType* value);

            [propget] HRESULT Version([out, retval] HSTRING* value);
            [propput] HRESULT Version([in] HSTRING value);

            [propget] HRESULT MinVersion([out, retval] HSTRING* value);
            [propput] HRESULT MinVersion([in] HSTRING value);

            [propget] HRESULT FallbackText([out, retval] HSTRING* value);
            [propput] HRESULT FallbackText([in] HSTRING value);

            [propget] HRESULT BackgroundImageUrl([out, retval] Windows.Foundation.Uri** value);
            [propput] HRESULT BackgroundImageUrl([in] Windows.Foundation.Uri* value);
        };

        [
            uuid(C312AD20-DFE3-4418-819F-E3CB7A0CD2FE),
            version(NTDDI_WIN10_RS1),
            exclusiveto(AdaptiveCard),
        ]
        interface IAdaptiveCardStatics : IInspectable
        {
            HRESULT CreateCardFromJson([in] HSTRING adaptiveJson, [out, retval] AdaptiveCard** card);
        };

        [
            version(NTDDI_WIN10_RS1),
            activatable(NTDDI_WIN10_RS1),
            static(IAdaptiveCardStatics, NTDDI_WIN10_RS1)
        ]
        runtimeclass AdaptiveCard
        {
            [default] interface IAdaptiveCard;
        }

        [
            uuid(16452a2e-1152-47f3-90bd-6e4148b09669),
            version(NTDDI_WIN10_RS1),
        ]
        interface IAdaptiveImage : IInspectable
        {
            [propget] HRESULT Url([out, retval] Windows.Foundation.Uri** value);
            [propput] HRESULT Url([in] Windows.Foundation.Uri* value);

            [propget] HRESULT Style([out, retval] ImageStyle* value);
            [propput] HRESULT Style([in] ImageStyle value);

            [propget] HRESULT Size([out, retval] ImageSize* value);
            [propput] HRESULT Size([in] ImageSize value);

            [propget] HRESULT HorizontalAlignment([out, retval] HAlignment* value);
            [propput] HRESULT HorizontalAlignment([in] HAlignment value);

            [propget] HRESULT AltText([out, retval] HSTRING* value);
            [propput] HRESULT AltText([in] HSTRING value);
        };

        [
            version(NTDDI_WIN10_RS1),
            activatable(NTDDI_WIN10_RS1)
        ]
        runtimeclass AdaptiveImage
        {
            [default] interface IAdaptiveImage;
            interface IAdaptiveCardElement;
        };

        [
            uuid(f618bd35-8fe3-46bd-8988-cdf5607314d1),
            version(NTDDI_WIN10_RS1),
            exclusiveto(AdaptiveImageSet)
        ]
        interface IAdaptiveImageSet : IInspectable
        {
            [propget] HRESULT Images([out, retval] Windows.Foundation.Collections.IVector<IAdaptiveImage*>** value);

            [propget] HRESULT ImageSize([out, retval] ImageSize* value);
            [propput] HRESULT ImageSize([in] ImageSize value);
        };

        [
            version(NTDDI_WIN10_RS1),
            activatable(NTDDI_WIN10_RS1)
        ]
        runtimeclass AdaptiveImageSet
        {
            [default] interface IAdaptiveImageSet;
            interface IAdaptiveCardElement;
        };

        [
            uuid(99797dfe-d39c-43a4-9f2b-d457cc358e1e),
            version(NTDDI_WIN10_RS1)
        ]
        interface IAdaptiveInputChoice : IInspectable
        {
            [propget] HRESULT ElementType([out, retval] ElementType* value);

            [propget] HRESULT Speak([out, retval] HSTRING* value);
            [propput] HRESULT Speak([in] HSTRING value);

            [propget] HRESULT Title([out, retval] HSTRING* value);
            [propput] HRESULT Title([in] HSTRING value);

            [propget] HRESULT Value([out, retval] HSTRING* value);
            [propput] HRESULT Value([in] HSTRING value);
            
            [propget] HRESULT IsSelected([out, retval] boolean* value);
            [propput] HRESULT IsSelected([in] boolean value);
        };

        [
            version(NTDDI_WIN10_RS1),
            activatable(NTDDI_WIN10_RS1)
        ]
        runtimeclass AdaptiveInputChoice
        {
            [default] interface IAdaptiveInputChoice;
        };

        [
            uuid(ce0735ef-f983-4a5e-bdad-f5eb7f962faa),
            version(NTDDI_WIN10_RS1)
        ]
        interface IAdaptiveInputChoiceSet : IInspectable
        {
            [propget] HRESULT IsMultiSelect([out, retval] boolean* value);
            [propput] HRESULT IsMultiSelect([in] boolean value);

            [propget] HRESULT IsRequired([out, retval] boolean* value);
            [propput] HRESULT IsRequired([in] boolean value);

            [propget] HRESULT ChoiceSetStyle([out, retval] ChoiceSetStyle* value);
            [propput] HRESULT ChoiceSetStyle([in] ChoiceSetStyle value);

            [propget] HRESULT Choices([out, retval] Windows.Foundation.Collections.IVector<IAdaptiveInputChoice*>** value);
        };

        [
            version(NTDDI_WIN10_RS1),
            activatable(NTDDI_WIN10_RS1)
        ]
        runtimeclass AdaptiveInputChoiceSet
        {
            [default] interface IAdaptiveInputChoiceSet;
            interface IAdaptiveCardElement;
        };

        [
            uuid(359e2cc5-9b8d-40bf-bbb2-2d3494d30991),
            version(NTDDI_WIN10_RS1),
            exclusiveto(AdaptiveInputDate)
        ]
        interface IAdaptiveInputDate : IInspectable
        {
            [propget] HRESULT Max([out, retval] HSTRING* value);
            [propput] HRESULT Max([in] HSTRING value);

            [propget] HRESULT Min([out, retval] HSTRING* value);
            [propput] HRESULT Min([in] HSTRING value);

            [propget] HRESULT Placeholder([out, retval] HSTRING* value);
            [propput] HRESULT Placeholder([in] HSTRING value);

            [propget] HRESULT Value([out, retval] HSTRING* value);
            [propput] HRESULT Value([in] HSTRING value);
        };

        [
            version(NTDDI_WIN10_RS1),
            activatable(NTDDI_WIN10_RS1)
        ]
        runtimeclass AdaptiveInputDate
        {
            [default] interface IAdaptiveInputDate;
            interface IAdaptiveCardElement;
        };

        [
            uuid(3bd0868c-5fbd-4341-91ff-4b07eb2bd54c),
            version(NTDDI_WIN10_RS1),
            exclusiveto(AdaptiveInputNumber)
        ]
        interface IAdaptiveInputNumber : IInspectable
        {
            [propget] HRESULT Max([out, retval] INT32 *value);
            [propput] HRESULT Max([in] INT32 value);

            [propget] HRESULT Min([out, retval] INT32 *value);
            [propput] HRESULT Min([in] INT32 value);

            [propget] HRESULT Placeholder([out, retval] HSTRING* value);
            [propput] HRESULT Placeholder([in] HSTRING value);

            [propget] HRESULT Value([out, retval] INT32* value);
            [propput] HRESULT Value([in] INT32 value);
        };

        [
            version(NTDDI_WIN10_RS1),
            activatable(NTDDI_WIN10_RS1)
        ]
        runtimeclass AdaptiveInputNumber
        {
            [default] interface IAdaptiveInputNumber;
            interface IAdaptiveCardElement;
        };

        [
            uuid(ab30772b-172d-4595-bcd2-01001df19d1e),
            version(NTDDI_WIN10_RS1),
            exclusiveto(AdaptiveInputText)
        ]
        interface IAdaptiveInputText : IInspectable
        {
            [propget] HRESULT IsMultiline([out, retval] boolean* value);
            [propput] HRESULT IsMultiline([in] boolean value);

            [propget] HRESULT MaxLength([out, retval] UINT32 *value);
            [propput] HRESULT MaxLength([in] UINT32 value);

            [propget] HRESULT Placeholder([out, retval] HSTRING* value);
            [propput] HRESULT Placeholder([in] HSTRING value);

            [propget] HRESULT Value([out, retval] HSTRING* value);
            [propput] HRESULT Value([in] HSTRING value);

            [propget] HRESULT TextInputStyle([out, retval] TextInputStyle* value);
            [propput] HRESULT TextInputStyle([in] TextInputStyle value);
        };

        [
            version(NTDDI_WIN10_RS1),
            activatable(NTDDI_WIN10_RS1)
        ]
        runtimeclass AdaptiveInputText
        {
            [default] interface IAdaptiveInputText;
            interface IAdaptiveCardElement;
        };

        [
            uuid(1ee90aff-93e8-4292-ac49-39d4c3289cd9),
            version(NTDDI_WIN10_RS1),
            exclusiveto(AdaptiveInputTime)
        ]
        interface IAdaptiveInputTime : IInspectable
        {
            [propget] HRESULT Max([out, retval] HSTRING* value);
            [propput] HRESULT Max([in] HSTRING value);

            [propget] HRESULT Min([out, retval] HSTRING* value);
            [propput] HRESULT Min([in] HSTRING value);

            [propget] HRESULT Placeholder([out, retval] HSTRING* value);
            [propput] HRESULT Placeholder([in] HSTRING value);

            [propget] HRESULT Value([out, retval] HSTRING* value);
            [propput] HRESULT Value([in] HSTRING value);
        };

        [
            version(NTDDI_WIN10_RS1),
            activatable(NTDDI_WIN10_RS1)
        ]
        runtimeclass AdaptiveInputTime
        {
            [default] interface IAdaptiveInputTime;
            interface IAdaptiveCardElement;
        };

        [
            uuid(e8af72a5-597c-4a19-b9c2-1a597db1c79a),
            version(NTDDI_WIN10_RS1),
            exclusiveto(AdaptiveInputToggle)
        ]
        interface IAdaptiveInputToggle : IInspectable
        {
            [propget] HRESULT Title([out, retval] HSTRING* value);
            [propput] HRESULT Title([in] HSTRING value);

            [propget] HRESULT Value([out, retval] HSTRING* value);
            [propput] HRESULT Value([in] HSTRING value);

            [propget] HRESULT ValueOff([out, retval] HSTRING* value);
            [propput] HRESULT ValueOff([in] HSTRING value);

            [propget] HRESULT ValueOn([out, retval] HSTRING* value);
            [propput] HRESULT ValueOn([in] HSTRING value);
        };

        [
            version(NTDDI_WIN10_RS1),
            activatable(NTDDI_WIN10_RS1)
        ]
        runtimeclass AdaptiveInputToggle
        {
            [default] interface IAdaptiveInputToggle;
            interface IAdaptiveCardElement;
        };

        [
            uuid(ba90da3f-556c-4e3a-9d01-11f2ce78dcd7),
            version(NTDDI_WIN10_RS1)
        ]
        interface IAdaptiveContainer : IInspectable
        {
            [propget] HRESULT Items([out, retval] Windows.Foundation.Collections.IVector<IAdaptiveCardElement*>** value);
        };

        [
            version(NTDDI_WIN10_RS1),
            activatable(NTDDI_WIN10_RS1)
        ]
        runtimeclass AdaptiveContainer
        {
            [default] interface IAdaptiveContainer;
            interface IAdaptiveCardElement;
        };

        [
            uuid(91e03800-d239-43bc-b5fb-2ccfe0cc7fcb),
            version(NTDDI_WIN10_RS1)
        ]
        interface IAdaptiveColumn : IInspectable
        {
            [propget] HRESULT Size([out, retval] HSTRING* value);
            [propput] HRESULT Size([in] HSTRING value);
        };

        [
            version(NTDDI_WIN10_RS1),
            activatable(NTDDI_WIN10_RS1)
        ]
        runtimeclass AdaptiveColumn
        {
            [default] interface IAdaptiveColumn;
            interface IAdaptiveContainer;
            interface IAdaptiveCardElement;
        };

        [
            uuid(4e3e1cd1-906b-4718-96ea-0a6e16bf0199),
            version(NTDDI_WIN10_RS1),
            exclusiveto(AdaptiveColumnSet)
        ]
        interface IAdaptiveColumnSet : IInspectable
        {
            [propget] HRESULT Columns([out, retval] Windows.Foundation.Collections.IVector<IAdaptiveColumn*>** value);
        };

        [
            version(NTDDI_WIN10_RS1),
            activatable(NTDDI_WIN10_RS1)
        ]
        runtimeclass AdaptiveColumnSet
        {
            [default] interface IAdaptiveColumnSet;
            interface IAdaptiveCardElement;
        };


        [
            uuid(5c19aa31-03aa-4148-a529-75b855ba045b),
            version(NTDDI_WIN10_RS1)
        ]
        interface IAdaptiveFact : IInspectable
        {
            [propget] HRESULT ElementType([out, retval] ElementType* value);

            [propget] HRESULT Speak([out, retval] HSTRING* value);
            [propput] HRESULT Speak([in] HSTRING value);

            [propget] HRESULT Title([out, retval] HSTRING* value);
            [propput] HRESULT Title([in] HSTRING value);

            [propget] HRESULT Value([out, retval] HSTRING* value);
            [propput] HRESULT Value([in] HSTRING value);
        };

        [
            version(NTDDI_WIN10_RS1),
            activatable(NTDDI_WIN10_RS1)
        ]
        runtimeclass AdaptiveFact
        {
            [default] interface IAdaptiveFact;
        };

        [
            uuid(05457b99-8090-4937-a637-b469f8edc74f),
            version(NTDDI_WIN10_RS1),
            exclusiveto(AdaptiveFactSet)
        ]
        interface IAdaptiveFactSet : IInspectable
        {
            [propget] HRESULT Facts([out, retval] Windows.Foundation.Collections.IVector<IAdaptiveFact*>** value);
        };

        [
            version(NTDDI_WIN10_RS1),
            activatable(NTDDI_WIN10_RS1)
        ]
        runtimeclass AdaptiveFactSet
        {
            [default] interface IAdaptiveFactSet;
            interface IAdaptiveCardElement;
        };

        [flags]
        [version(NTDDI_WIN10_RS1)]
        typedef [v1_enum] enum RenderOptions
        {
            None = 0x0,
            SupportsActionBar = 0x1,
            SupportsInlineActions = 0x2,
        }RenderOptions;

        [
            uuid(DB7C7BB8-C313-440A-A421-B52620107F8B),
            version(NTDDI_WIN10_RS1),
            exclusiveto(XamlCardRenderer),
        ]
        interface IXamlCardRenderer : IInspectable
        {
            HRESULT SetRenderOptions([in] RenderOptions options);
            HRESULT SetOverrideStyles([in] Windows.UI.Xaml.ResourceDictionary* overrideDictionary);
            HRESULT SetHostOptions([in] AdaptiveHostOptions* hostOptions);

            HRESULT RenderCardAsXaml([in] AdaptiveCard* adaptiveCard, [out, retval] Windows.UI.Xaml.UIElement** result);
            HRESULT RenderCardAsXamlAsync([in] AdaptiveCard* adaptiveCard, [out, retval] Windows.Foundation.IAsyncOperation<Windows.UI.Xaml.UIElement*>** result);

            HRESULT RenderAdaptiveJsonAsXaml([in] HSTRING adaptiveJson, [out, retval] Windows.UI.Xaml.UIElement** result);
            HRESULT RenderAdaptiveJsonAsXamlAsync([in] HSTRING adaptiveJson, [out, retval] Windows.Foundation.IAsyncOperation<Windows.UI.Xaml.UIElement*>** result);

            [eventadd] HRESULT Action([in] Windows.Foundation.TypedEventHandler<XamlCardRenderer*, AdaptiveActionEventArgs*>* pHandler, [out][retval] EventRegistrationToken* pToken);
            [eventremove] HRESULT Action([in] EventRegistrationToken token);
        };

        [
            version(NTDDI_WIN10_RS1),
            activatable(NTDDI_WIN10_RS1),
        ]
        runtimeclass XamlCardRenderer
        {
            [default] interface IXamlCardRenderer;
        };

        [
            uuid(6853cff8-60ee-4270-9cd2-23b25cd8703f),
            version(NTDDI_WIN10_RS1),
            exclusiveto(AdaptiveActionEventArgs)
        ]
        interface IAdaptiveActionEventArgs : IInspectable
        {
            [propget] HRESULT Action([out, retval] IAdaptiveActionElement** action);
        }

        [
            version(NTDDI_WIN10_RS1),
        ]
        runtimeclass AdaptiveActionEventArgs
        {
            [default] interface IAdaptiveActionEventArgs;
        };

        [
            uuid(c49685af-df56-49ea-8fce-ce302788edc5),
            version(NTDDI_WIN10_RS1),
            exclusiveto(AdaptiveBoundaryOptions)
        ]
        interface IAdaptiveBoundaryOptions : IInspectable
        {
            [propget] HRESULT Left([out, retval] UINT32 *value);
            [propput] HRESULT Left([in] UINT32 value);

            [propget] HRESULT Right([out, retval] UINT32 *value);
            [propput] HRESULT Right([in] UINT32 value);

            [propget] HRESULT Bottom([out, retval] UINT32 *value);
            [propput] HRESULT Bottom([in] UINT32 value);

            [propget] HRESULT Top([out, retval] UINT32 *value);
            [propput] HRESULT Top([in] UINT32 value);
        };

        [
            version(NTDDI_WIN10_RS1),
            activatable(NTDDI_WIN10_RS1)
        ]
        runtimeclass AdaptiveBoundaryOptions
        {
            [default] interface IAdaptiveBoundaryOptions;
        };

        [
            uuid(ebca0eab-b08b-4087-9c42-4667ec6ab0e0),
            version(NTDDI_WIN10_RS1),
            exclusiveto(AdaptiveFontSizeOptions)
        ]
        interface IAdaptiveFontSizeOptions : IInspectable
        {
            [propget] HRESULT Small([out, retval] UINT32 *value);
            [propput] HRESULT Small([in] UINT32 value);

            [propget] HRESULT Normal([out, retval] UINT32 *value);
            [propput] HRESULT Normal([in] UINT32 value);

            [propget] HRESULT Medium([out, retval] UINT32 *value);
            [propput] HRESULT Medium([in] UINT32 value);

            [propget] HRESULT Large([out, retval] UINT32 *value);
            [propput] HRESULT Large([in] UINT32 value);

            [propget] HRESULT ExtraLarge([out, retval] UINT32 *value);
            [propput] HRESULT ExtraLarge([in] UINT32 value);
        };

        [
            version(NTDDI_WIN10_RS1),
            activatable(NTDDI_WIN10_RS1)
        ]
        runtimeclass AdaptiveFontSizeOptions
        {
            [default] interface IAdaptiveFontSizeOptions;
        };

        [
            uuid(421149d7-65e9-4ec9-b70b-802ba7d6cf98),
            version(NTDDI_WIN10_RS1),
            exclusiveto(AdaptiveColorOption)
        ]
        interface IAdaptiveColorOption : IInspectable
        {
            [propget] HRESULT Normal([out][retval] Windows.UI.Color* value);
            [propput] HRESULT Normal([in] Windows.UI.Color value);

            [propget] HRESULT Subtle([out][retval] Windows.UI.Color* value);
            [propput] HRESULT Subtle([in] Windows.UI.Color value);
        };

        [
            version(NTDDI_WIN10_RS1),
            activatable(NTDDI_WIN10_RS1)
        ]
        runtimeclass AdaptiveColorOption
        {
            [default] interface IAdaptiveColorOption;
        };

        [
            uuid(1ade7d94-f0ae-4301-a9e2-b1f9c065916f),
            version(NTDDI_WIN10_RS1),
            exclusiveto(AdaptiveColorOptions)
        ]
        interface IAdaptiveColorOptions : IInspectable
        {
            [propget] HRESULT Default([out][retval] AdaptiveColorOption** value);
            [propput] HRESULT Default([in] AdaptiveColorOption* value);

            [propget] HRESULT Accent([out][retval] AdaptiveColorOption** value);
            [propput] HRESULT Accent([in] AdaptiveColorOption* value);

            [propget] HRESULT Dark([out][retval] AdaptiveColorOption** value);
            [propput] HRESULT Dark([in] AdaptiveColorOption* value);

            [propget] HRESULT Light([out][retval] AdaptiveColorOption** value);
            [propput] HRESULT Light([in] AdaptiveColorOption* value);

            [propget] HRESULT Good([out][retval] AdaptiveColorOption** value);
            [propput] HRESULT Good([in] AdaptiveColorOption* value);

            [propget] HRESULT Warning([out][retval] AdaptiveColorOption** value);
            [propput] HRESULT Warning([in] AdaptiveColorOption* value);

            [propget] HRESULT Attention([out][retval] AdaptiveColorOption** value);
            [propput] HRESULT Attention([in] AdaptiveColorOption* value);
        };

        [
            version(NTDDI_WIN10_RS1),
            activatable(NTDDI_WIN10_RS1)
        ]
        runtimeclass AdaptiveColorOptions
        {
            [default] interface IAdaptiveColorOptions;
        };

        [
            uuid(d730ba59-1f48-4dc6-8375-17f364f6086a),
            version(NTDDI_WIN10_RS1),
            exclusiveto(AdaptiveTextOptions)
        ]
        interface IAdaptiveTextOptions : IInspectable
        {
            [propget] HRESULT Weight([out, retval] TextWeight* value);
            [propput] HRESULT Weight([in] TextWeight value);

            [propget] HRESULT Size([out, retval] TextSize* value);
            [propput] HRESULT Size([in] TextSize value);

            [propget] HRESULT Color([out, retval] TextColor* value);
            [propput] HRESULT Color([in] TextColor value);
 
            [propget] HRESULT IsSubtle([out, retval] boolean* value);
            [propput] HRESULT IsSubtle([in] boolean value);
        };

        [
            version(NTDDI_WIN10_RS1),
            activatable(NTDDI_WIN10_RS1)
        ]
        runtimeclass AdaptiveTextOptions
        {
            [default] interface IAdaptiveTextOptions;
        };

        [
            uuid(88e10cbc-0d67-42e3-bfcc-fd2ddb31dadd),
            version(NTDDI_WIN10_RS1),
            exclusiveto(AdaptiveSeparationOptions)
        ]
        interface IAdaptiveSeparationOptions : IInspectable
        {
            [propget] HRESULT Spacing([out, retval] UINT32 *value);
            [propput] HRESULT Spacing([in] UINT32 value);

            [propget] HRESULT LineThickness([out, retval] UINT32 *value);
            [propput] HRESULT LineThickness([in] UINT32 value);

            [propget] HRESULT LineColor([out, retval] Windows.UI.Color* value);
            [propput] HRESULT LineColor([in] Windows.UI.Color value);
        };

        [
            version(NTDDI_WIN10_RS1),
            activatable(NTDDI_WIN10_RS1)
        ]
        runtimeclass AdaptiveSeparationOptions
        {
            [default] interface IAdaptiveSeparationOptions;
        };

        [
            uuid(ce5cd318-502c-4017-a076-4f8cdbb0316d),
            version(NTDDI_WIN10_RS1),
            exclusiveto(AdaptiveImageSizeOptions)
        ]
        interface IAdaptiveImageSizeOptions : IInspectable
        {
            [propget] HRESULT Small([out, retval] UINT32 *value);
            [propput] HRESULT Small([in] UINT32 value);

            [propget] HRESULT Medium([out, retval] UINT32 *value);
            [propput] HRESULT Medium([in] UINT32 value);

            [propget] HRESULT Large([out, retval] UINT32 *value);
            [propput] HRESULT Large([in] UINT32 value);
        };

        [
            version(NTDDI_WIN10_RS1),
            activatable(NTDDI_WIN10_RS1)
        ]
        runtimeclass AdaptiveImageSizeOptions
        {
            [default] interface IAdaptiveImageSizeOptions;
        };

        [
            uuid(51417beb-2bbc-44e5-8210-6f61414cca6f),
            version(NTDDI_WIN10_RS1),
            exclusiveto(AdaptiveTextBlockOptions)
        ]
        interface IAdaptiveTextBlockOptions : IInspectable
        {
            [propget] HRESULT SmallSeparation([out, retval] AdaptiveSeparationOptions** value);
            [propput] HRESULT SmallSeparation([in] AdaptiveSeparationOptions* value);

            [propget] HRESULT NormalSeparation([out, retval] AdaptiveSeparationOptions** value);
            [propput] HRESULT NormalSeparation([in] AdaptiveSeparationOptions* value);

            [propget] HRESULT MediumSeparation([out, retval] AdaptiveSeparationOptions** value);
            [propput] HRESULT MediumSeparation([in] AdaptiveSeparationOptions* value);

            [propget] HRESULT LargeSeparation([out, retval] AdaptiveSeparationOptions** value);
            [propput] HRESULT LargeSeparation([in] AdaptiveSeparationOptions* value);

            [propget] HRESULT ExtraLargeSeparation([out, retval] AdaptiveSeparationOptions** value);
            [propput] HRESULT ExtraLargeSeparation([in] AdaptiveSeparationOptions* value);
        };

        [
            version(NTDDI_WIN10_RS1),
            activatable(NTDDI_WIN10_RS1)
        ]
        runtimeclass AdaptiveTextBlockOptions
        {
            [default] interface IAdaptiveTextBlockOptions;
        };
        
        [
            uuid(29685cc3-027f-4da8-9659-6d3a53c34d88),
            version(NTDDI_WIN10_RS1),
            exclusiveto(AdaptiveImageSetOptions)
        ]
        interface IAdaptiveImageSetOptions : IInspectable
        {
            [propget] HRESULT ImageSize([out, retval] ImageSize* value);
            [propput] HRESULT ImageSize([in] ImageSize value);

            [propget] HRESULT Separation([out, retval] AdaptiveSeparationOptions** value);
            [propput] HRESULT Separation([in] AdaptiveSeparationOptions* value);
        };

        [
            version(NTDDI_WIN10_RS1),
            activatable(NTDDI_WIN10_RS1)
        ]
        runtimeclass AdaptiveImageSetOptions
        {
            [default] interface IAdaptiveImageSetOptions;
        };

        [
            uuid(0103c3c1-aa6e-4fb4-ab38-9c0ff1a6a00f),
            version(NTDDI_WIN10_RS1),
            exclusiveto(AdaptiveColumnOptions)
        ]
        interface IAdaptiveColumnOptions : IInspectable
        {
            [propget] HRESULT Separation([out, retval] AdaptiveSeparationOptions **value);
            [propput] HRESULT Separation([in] AdaptiveSeparationOptions *value);
        };

        [
            version(NTDDI_WIN10_RS1),
            activatable(NTDDI_WIN10_RS1)
        ]
        runtimeclass AdaptiveColumnOptions
        {
            [default] interface IAdaptiveColumnOptions;
        };

        [
            uuid(740419b1-29de-435d-b8da-e34f1bd5afee),
            version(NTDDI_WIN10_RS1),
            exclusiveto(AdaptiveContainerOptions)
        ]
        interface IAdaptiveContainerOptions : IInspectable
        {
            [propget] HRESULT Separation([out, retval] AdaptiveSeparationOptions** value);
            [propput] HRESULT Separation([in] AdaptiveSeparationOptions* value);
        };

        [
            version(NTDDI_WIN10_RS1),
            activatable(NTDDI_WIN10_RS1)
        ]
        runtimeclass AdaptiveContainerOptions
        {
            [default] interface IAdaptiveContainerOptions;
        };

        [
            uuid(cc83d315-b819-4980-97b1-cf950e760fc4),
            version(NTDDI_WIN10_RS1),
            exclusiveto(AdaptiveColumnSetOptions)
        ]
        interface IAdaptiveColumnSetOptions : IInspectable
        {
            [propget] HRESULT Separation([out, retval] AdaptiveSeparationOptions** value);
            [propput] HRESULT Separation([in] AdaptiveSeparationOptions* value);
        };

        [
            version(NTDDI_WIN10_RS1),
            activatable(NTDDI_WIN10_RS1)
        ]
        runtimeclass AdaptiveColumnSetOptions
        {
            [default] interface IAdaptiveColumnSetOptions;
        };

        [
            uuid(4b8664ce-92d4-4093-af07-0d46712ac09b),
            version(NTDDI_WIN10_RS1),
            exclusiveto(AdaptiveImageOptions)
        ]
        interface IAdaptiveImageOptions : IInspectable
        {
            [propget] HRESULT Separation([out, retval] AdaptiveSeparationOptions** value);
            [propput] HRESULT Separation([in] AdaptiveSeparationOptions* value);
        };

        [
            version(NTDDI_WIN10_RS1),
            activatable(NTDDI_WIN10_RS1)
        ]
        runtimeclass AdaptiveImageOptions
        {
            [default] interface IAdaptiveImageOptions;
        };

        [
            uuid(9363ea9c-9f73-4e7d-8d6e-0559ac52b314),
            version(NTDDI_WIN10_RS1),
            exclusiveto(AdaptiveCardOptions)
        ]
        interface IAdaptiveCardOptions : IInspectable
        {
            [propget] HRESULT Padding([out, retval] AdaptiveBoundaryOptions** value);
            [propput] HRESULT Padding([in] AdaptiveBoundaryOptions* value);

            [propget] HRESULT BackgroundColor([out][retval] Windows.UI.Color* value);
            [propput] HRESULT BackgroundColor([in] Windows.UI.Color value);
        };

        [
            version(NTDDI_WIN10_RS1),
            activatable(NTDDI_WIN10_RS1)
        ]
        runtimeclass AdaptiveCardOptions
        {
            [default] interface IAdaptiveCardOptions;
        };

        [
            uuid(9949ed60-fbc0-49fd-80d4-29fb1184854d),
            version(NTDDI_WIN10_RS1),
            exclusiveto(AdaptiveFactSetOptions)
        ]
        interface IAdaptiveFactSetOptions : IInspectable
        {
            [propget] HRESULT Title([out, retval] AdaptiveTextOptions** value);
            [propput] HRESULT Title([in] AdaptiveTextOptions* value);

            [propget] HRESULT Value([out, retval] AdaptiveTextOptions** value);
            [propput] HRESULT Value([in] AdaptiveTextOptions* value);

            [propget] HRESULT Spacing([out][retval] UINT32* value);
            [propput] HRESULT Spacing([in] UINT32 value);

            [propget] HRESULT Separation([out, retval] AdaptiveSeparationOptions** value);
            [propput] HRESULT Separation([in] AdaptiveSeparationOptions* value);
        };

        [
            version(NTDDI_WIN10_RS1),
            activatable(NTDDI_WIN10_RS1)
        ]
        runtimeclass AdaptiveFactSetOptions
        {
            [default] interface IAdaptiveFactSetOptions;
        };

        [
            uuid(eacabf24-288c-4307-bd5a-5888a00da918),
            version(NTDDI_WIN10_RS1),
            exclusiveto(AdaptiveShowCardOptions)
        ]
        interface IAdaptiveShowCardOptions : IInspectable
        {
            [propget] HRESULT ActionMode([out, retval] ActionMode *value);
            [propput] HRESULT ActionMode([in] ActionMode value);

            [propget] HRESULT BackgroundColor([out][retval] Windows.UI.Color* value);
            [propput] HRESULT BackgroundColor([in] Windows.UI.Color value);

            [propget] HRESULT Padding([out, retval] AdaptiveBoundaryOptions** value);
            [propput] HRESULT Padding([in] AdaptiveBoundaryOptions* value);

            [propget] HRESULT InlineTopMargin([out, retval] UINT32 *value);
            [propput] HRESULT InlineTopMargin([in] UINT32 value);
        };

        [
            version(NTDDI_WIN10_RS1),
            activatable(NTDDI_WIN10_RS1)
        ]
        runtimeclass AdaptiveShowCardOptions
        {
            [default] interface IAdaptiveShowCardOptions;
        };

        [
            uuid(c01e7195-0c83-4fed-9911-3845bdb8ebc6),
            version(NTDDI_WIN10_RS1),
            exclusiveto(AdaptiveActionOptions)
        ]
        interface IAdaptiveActionOptions : IInspectable
        {
            [propget] HRESULT ShowCard([out, retval] AdaptiveShowCardOptions** value);
            [propput] HRESULT ShowCard([in] AdaptiveShowCardOptions* value);

            [propget] HRESULT ActionsOrientation([out][retval] ActionsOrientation* value);
            [propput] HRESULT ActionsOrientation([in] ActionsOrientation value);

            [propget] HRESULT ActionAlignment([out, retval] ActionAlignment* value);
            [propput] HRESULT ActionAlignment([in] ActionAlignment value);

            [propget] HRESULT ButtonSpacing([out][retval] UINT32* value);
            [propput] HRESULT ButtonSpacing([in] UINT32 value);

            [propget] HRESULT MaxActions([out][retval] UINT32* value);
            [propput] HRESULT MaxActions([in] UINT32 value);

            [propget] HRESULT Separation([out, retval] AdaptiveSeparationOptions** value);
            [propput] HRESULT Separation([in] AdaptiveSeparationOptions* value);
        };

        [
            version(NTDDI_WIN10_RS1),
            activatable(NTDDI_WIN10_RS1)
        ]
        runtimeclass AdaptiveActionOptions
        {
            [default] interface IAdaptiveActionOptions;
        };

        [
            uuid(11213517-1e67-49df-a471-13dc0b2a3e5c),
            version(NTDDI_WIN10_RS1),
            exclusiveto(AdaptiveDateInputOptions)
        ]
        interface IAdaptiveDateInputOptions : IInspectable
        {
            [propget] HRESULT Separation([out, retval] AdaptiveSeparationOptions** value);
            [propput] HRESULT Separation([in] AdaptiveSeparationOptions* value);
        };

        [
            version(NTDDI_WIN10_RS1),
            activatable(NTDDI_WIN10_RS1)
        ]
        runtimeclass AdaptiveDateInputOptions
        {
            [default] interface IAdaptiveDateInputOptions;
        };

        [
            uuid(0a53b7db-e8d8-41a5-94ad-d0992ba2879e),
            version(NTDDI_WIN10_RS1),
            exclusiveto(AdaptiveTimeInputOptions)
        ]
        interface IAdaptiveTimeInputOptions : IInspectable
        {
            [propget] HRESULT Separation([out, retval] AdaptiveSeparationOptions** value);
            [propput] HRESULT Separation([in] AdaptiveSeparationOptions* value);
        };

        [
            version(NTDDI_WIN10_RS1),
            activatable(NTDDI_WIN10_RS1)
        ]
        runtimeclass AdaptiveTimeInputOptions
        {
            [default] interface IAdaptiveTimeInputOptions;
        };

        [
            uuid(f0a43896-35e3-4d61-9057-c19da8dafa07),
            version(NTDDI_WIN10_RS1),
            exclusiveto(AdaptiveNumberInputOptions)
        ]
        interface IAdaptiveNumberInputOptions : IInspectable
        {
            [propget] HRESULT Separation([out, retval] AdaptiveSeparationOptions** value);
            [propput] HRESULT Separation([in] AdaptiveSeparationOptions* value);
        };

        [
            version(NTDDI_WIN10_RS1),
            activatable(NTDDI_WIN10_RS1)
        ]
        runtimeclass AdaptiveNumberInputOptions
        {
            [default] interface IAdaptiveNumberInputOptions;
        };

        [
            uuid(78a7b94a-559a-4aec-8d34-6a88189460b3),
            version(NTDDI_WIN10_RS1),
            exclusiveto(AdaptiveToggleInputOptions)
        ]
        interface IAdaptiveToggleInputOptions : IInspectable
        {
            [propget] HRESULT Separation([out, retval] AdaptiveSeparationOptions** value);
            [propput] HRESULT Separation([in] AdaptiveSeparationOptions* value);
        };

        [
            version(NTDDI_WIN10_RS1),
            activatable(NTDDI_WIN10_RS1)
        ]
        runtimeclass AdaptiveToggleInputOptions
        {
            [default] interface IAdaptiveToggleInputOptions;
        };

        [
            uuid(b9b3fccc-2d5a-4a15-9e72-b8f6e8d479e9),
            version(NTDDI_WIN10_RS1),
            exclusiveto(AdaptiveTextInputOptions)
        ]
        interface IAdaptiveTextInputOptions : IInspectable
        {
            [propget] HRESULT Separation([out, retval] AdaptiveSeparationOptions** value);
            [propput] HRESULT Separation([in] AdaptiveSeparationOptions* value);
        };

        [
            version(NTDDI_WIN10_RS1),
            activatable(NTDDI_WIN10_RS1)
        ]
        runtimeclass AdaptiveTextInputOptions
        {
            [default] interface IAdaptiveTextInputOptions;
        };

        [
            uuid(0df8b226-303c-46a7-9c4b-0b4154bb9c7d),
            version(NTDDI_WIN10_RS1),
            exclusiveto(AdaptiveChoiceSetInputOptions)
        ]
        interface IAdaptiveChoiceSetInputOptions : IInspectable
        {
            [propget] HRESULT Separation([out, retval] AdaptiveSeparationOptions** value);
            [propput] HRESULT Separation([in] AdaptiveSeparationOptions* value);
        };

        [
            version(NTDDI_WIN10_RS1),
            activatable(NTDDI_WIN10_RS1)
        ]
        runtimeclass AdaptiveChoiceSetInputOptions
        {
            [default] interface IAdaptiveChoiceSetInputOptions;
        };

        [
            uuid(85ef9ddc-4599-4ab6-adf1-1e04238601a5),
            version(NTDDI_WIN10_RS1),
            exclusiveto(AdaptiveHostOptions)
        ]
        interface IAdaptiveHostOptions : IInspectable
        {
            [propget] HRESULT FontFamily([out, retval] HSTRING* value);
            [propput] HRESULT FontFamily([in] HSTRING value);

            [propget] HRESULT FontSizes([out, retval] AdaptiveFontSizeOptions** value);
            [propput] HRESULT FontSizes([in] AdaptiveFontSizeOptions* value);

            [propget] HRESULT SupportsInteractivity([out, retval] boolean* value);
            [propput] HRESULT SupportsInteractivity([in] boolean value);

            [propget] HRESULT Colors([out, retval] AdaptiveColorOptions** value);
            [propput] HRESULT Colors([in] AdaptiveColorOptions* value);

            [propget] HRESULT ImageSizes([out, retval] AdaptiveImageSizeOptions** value);
            [propput] HRESULT ImageSizes([in] AdaptiveImageSizeOptions* value);

            [propget] HRESULT MaxActions([out, retval] UINT32 *value);
            [propput] HRESULT MaxActions([in] UINT32 value);

            [propget] HRESULT StrongSeparation([out, retval] AdaptiveSeparationOptions** value);
            [propput] HRESULT StrongSeparation([in] AdaptiveSeparationOptions* value);

            [propget] HRESULT AdaptiveCard([out, retval] AdaptiveCardOptions** value);
            [propput] HRESULT AdaptiveCard([in] AdaptiveCardOptions* value);

            [propget] HRESULT ImageSet([out, retval] AdaptiveImageSetOptions** value);
            [propput] HRESULT ImageSet([in] AdaptiveImageSetOptions* value);

            [propget] HRESULT Image([out, retval] AdaptiveImageOptions** value);
            [propput] HRESULT Image([in] AdaptiveImageOptions* value);

            [propget] HRESULT FactSet([out, retval] AdaptiveFactSetOptions** value);
            [propput] HRESULT FactSet([in] AdaptiveFactSetOptions* value);

            [propget] HRESULT Column([out, retval] AdaptiveColumnOptions** value);
            [propput] HRESULT Column([in] AdaptiveColumnOptions* value);

            [propget] HRESULT Container([out, retval] AdaptiveContainerOptions** value);
            [propput] HRESULT Container([in] AdaptiveContainerOptions* value);

            [propget] HRESULT ColumnSet([out, retval] AdaptiveColumnSetOptions** value);
            [propput] HRESULT ColumnSet([in] AdaptiveColumnSetOptions* value);

            [propget] HRESULT TextBlock([out, retval] AdaptiveTextBlockOptions** value);
            [propput] HRESULT TextBlock([in] AdaptiveTextBlockOptions* value);

            [propget] HRESULT DateInput([out, retval] AdaptiveDateInputOptions** value);
            [propput] HRESULT DateInput([in] AdaptiveDateInputOptions* value);

            [propget] HRESULT TimeInput([out, retval] AdaptiveTimeInputOptions** value);
            [propput] HRESULT TimeInput([in] AdaptiveTimeInputOptions* value);

            [propget] HRESULT NumberInput([out, retval] AdaptiveNumberInputOptions** value);
            [propput] HRESULT NumberInput([in] AdaptiveNumberInputOptions* value);

            [propget] HRESULT ToggleInput([out, retval] AdaptiveToggleInputOptions** value);
            [propput] HRESULT ToggleInput([in] AdaptiveToggleInputOptions* value);

            [propget] HRESULT TextInput([out, retval] AdaptiveTextInputOptions** value);
            [propput] HRESULT TextInput([in] AdaptiveTextInputOptions* value);

            [propget] HRESULT ChoiceSetInput([out, retval] AdaptiveChoiceSetInputOptions** value);
            [propput] HRESULT ChoiceSetInput([in] AdaptiveChoiceSetInputOptions* value);

            [propget] HRESULT Actions([out, retval] AdaptiveActionOptions** value);
            [propput] HRESULT Actions([in] AdaptiveActionOptions* value);
        };

        [
            version(NTDDI_WIN10_RS1),
            activatable(NTDDI_WIN10_RS1)
        ]
        runtimeclass AdaptiveHostOptions
        {
            [default] interface IAdaptiveHostOptions;
        };

        [
            uuid(f0076852-de82-4cc6-8cb3-26cf6ab3c196),
            version(NTDDI_WIN10_RS1),
        ]
        interface IAdaptiveActionElement : IInspectable
        {
            [propget] HRESULT ActionType([out, retval] ActionType* value);

            [propget] HRESULT Title([out, retval] HSTRING* value);
            [propput] HRESULT Title([in] HSTRING value);

            [propget] HRESULT Speak([out, retval] HSTRING* value);
            [propput] HRESULT Speak([in] HSTRING value);
        };

        [
            uuid(3d2b3b79-af79-46c5-9657-d862f2dee109),
            version(NTDDI_WIN10_RS1),
        ]
        interface IAdaptiveHttpAction : IInspectable
        {
            [propput] HRESULT Url([in] Windows.Foundation.Uri* value);
            [propget] HRESULT Url([out, retval] Windows.Foundation.Uri** value);

            [propget] HRESULT Method([out, retval] HSTRING* value);
            [propput] HRESULT Method([in] HSTRING value);

            [propget] HRESULT Body([out, retval] HSTRING* value);
            [propput] HRESULT Body([in] HSTRING value);
        };

        [
            version(NTDDI_WIN10_RS1),
            activatable(NTDDI_WIN10_RS1)
        ]
        runtimeclass AdaptiveHttpAction
        {
            [default] interface IAdaptiveHttpAction;
            interface IAdaptiveActionElement;
        };

        [
            uuid(d70a58cb-4d51-4f96-bb6b-2698eced32ff),
            version(NTDDI_WIN10_RS1),
        ]
        interface IAdaptiveOpenUrlAction : IInspectable
        {
            [propput] HRESULT Url([in] Windows.Foundation.Uri* value);
            [propget] HRESULT Url([out, retval] Windows.Foundation.Uri** value);
        };

        [
            version(NTDDI_WIN10_RS1),
            activatable(NTDDI_WIN10_RS1)
        ]
        runtimeclass AdaptiveOpenUrlAction
        {
            [default] interface IAdaptiveOpenUrlAction;
            interface IAdaptiveActionElement;
        };

        [
            uuid(435ea974-33c7-43b0-a6ac-8137c1b7bb44),
            version(NTDDI_WIN10_RS1),
        ]
        interface IAdaptiveShowCardAction : IInspectable
        {
            [propget] HRESULT Card([out, retval] AdaptiveCard** value);
            [propput] HRESULT Card([in] AdaptiveCard* value);
        };

        [
            version(NTDDI_WIN10_RS1),
            activatable(NTDDI_WIN10_RS1)
        ]
        runtimeclass AdaptiveShowCardAction
        {
            [default] interface IAdaptiveShowCardAction;
            interface IAdaptiveActionElement;
        };

        [
            uuid(97b9b3a3-657b-4d38-a136-154cc8da19a9),
            version(NTDDI_WIN10_RS1),
        ]
        interface IAdaptiveSubmitAction : IInspectable
        {
        };

        [
            version(NTDDI_WIN10_RS1),
            activatable(NTDDI_WIN10_RS1)
        ]
        runtimeclass AdaptiveSubmitAction
        {
            [default] interface IAdaptiveSubmitAction;
            interface IAdaptiveActionElement;
        };
    }
}